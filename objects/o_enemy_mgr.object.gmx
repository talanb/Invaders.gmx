<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
enemies = ds_grid_create(11, 5)
next_row_to_move = 4
dir = 1

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move enemies
if (!o_input.paused) {
    var 
        right_x = scr_get_rightmost_enemy().x,
        left_x = scr_get_leftmost_enemy().x,
        nextRightEdge = right_x + (sprite_get_width(sprite_index)/2) + 2,
        nextLeftEdge = left_x - (sprite_get_width(sprite_index)/2) - 2,
        moving_down = false;
    
    dv("dir", dir);
    dv("nextRightEdge", nextRightEdge);
    dv("nextLeftEdge", nextLeftEdge);
    
    if (dir == DIR_RIGHT) {
       if (nextRightEdge &gt; 550) {
            with (o_enemy_parent) {
                   y += 8;
            }
            dir = -dir;
            show_debug_message("moving down: right");
            moving_down = true;
       } 
    } else {
      if (nextLeftEdge &lt; 60) {
           with (o_enemy_parent) {
               y += 8;
           }
           dir = -dir;
           show_debug_message("moving_down: left");
           moving_down = true;
      }
      
    }
     
    if (!moving_down) {
       
       with (o_enemy_parent) {
            x += other.dir * 2;
            image_index = !image_index
       } moving_down = false;
    }
    
    alarm[0] = room_speed / 2
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
